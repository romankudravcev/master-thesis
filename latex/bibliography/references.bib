
@inproceedings{barbaruloExtendingETSIMEC2022,
  title = {Extending {{ETSI MEC Towards Stateful Application Relocation Based}} on {{Container Migration}}},
  booktitle = {2022 {{IEEE}} 23rd {{International Symposium}} on a {{World}} of {{Wireless}}, {{Mobile}} and {{Multimedia Networks}} ({{WoWMoM}})},
  author = {Barbarulo, Francesco and Puliafito, Carlo and Virdis, Antonio and Mingozzi, Enzo},
  year = {2022},
  month = jun,
  pages = {367--376},
  publisher = {IEEE},
  address = {Belfast, United Kingdom},
  doi = {10.1109/WoWMoM54355.2022.00035},
  urldate = {2025-01-17},
  copyright = {https://doi.org/10.15223/policy-029},
  isbn = {978-1-6654-0876-9}
}

@article{wangSurveyServiceMigration2018,
  title = {A {{Survey}} on {{Service Migration}} in {{Mobile Edge Computing}}},
  author = {Wang, Shangguang and Xu, Jinliang and Zhang, Ning and Liu, Yujiong},
  year = {2018},
  journal = {IEEE Access},
  volume = {6},
  pages = {23511--23528},
  issn = {2169-3536},
  doi = {10.1109/ACCESS.2018.2828102},
  urldate = {2025-01-17},
  copyright = {https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/OAPA.html}
}

@inproceedings{zhengWorkloadawareLiveStorage2011,
  title = {Workload-Aware Live Storage Migration for Clouds},
  booktitle = {Proceedings of the 7th {{ACM SIGPLAN}}/{{SIGOPS}} International Conference on {{Virtual}} Execution Environments},
  author = {Zheng, Jie and Ng, Tze Sing Eugene and Sripanidkulchai, Kunwadee},
  year = {2011},
  month = mar,
  pages = {133--144},
  publisher = {ACM},
  address = {Newport Beach California USA},
  doi = {10.1145/1952682.1952700},
  urldate = {2025-01-17},
  isbn = {978-1-4503-0687-4},
  langid = {english},
  file = {/home/sebastian.boehm/Zotero/storage/UQAWSZ8C/Zheng et al. - 2011 - Workload-aware live storage migration for clouds.pdf}
}


@article{satyanarayanan_emergence_2017,
	title = {The {Emergence} of {Edge} {Computing}},
	volume = {50},
	copyright = {https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/IEEE.html},
	issn = {0018-9162},
	url = {http://ieeexplore.ieee.org/document/7807196/},
	doi = {10.1109/MC.2017.9},
	language = {en},
	number = {1},
	urldate = {2024-11-30},
	journal = {Computer},
	author = {Satyanarayanan, Mahadev},
	month = jan,
	year = {2017},
	pages = {30--39},
	file = {Satyanarayanan - 2017 - The Emergence of Edge Computing.pdf:/Users/romankudravcev/Zotero/storage/CFXZ5WZP/Satyanarayanan - 2017 - The Emergence of Edge Computing.pdf:application/pdf},
}

@article{cao_overview_2020,
	title = {An {Overview} on {Edge} {Computing} {Research}},
	volume = {8},
	copyright = {https://creativecommons.org/licenses/by/4.0/legalcode},
	issn = {2169-3536},
	url = {https://ieeexplore.ieee.org/document/9083958/},
	doi = {10.1109/ACCESS.2020.2991734},
	abstract = {With the rapid development of the Internet of Everything (IoE), the number of smart devices connected to the Internet is increasing, resulting in large-scale data, which has caused problems such as bandwidth load, slow response speed, poor security, and poor privacy in traditional cloud computing models. Traditional cloud computing is no longer sufﬁcient to support the diverse needs of today’s intelligent society for data processing, so edge computing technologies have emerged. It is a new computing paradigm for performing calculations at the edge of the network. Unlike cloud computing, it emphasizes closer to the user and closer to the source of the data. At the edge of the network, it is lightweight for local, small-scale data storage and processing. This article mainly reviews the related research and results of edge computing. First, it summarizes the concept of edge computing and compares it with cloud computing. Then summarize the architecture of edge computing, keyword technology, security and privacy protection, and ﬁnally summarize the applications of edge computing.},
	language = {en},
	urldate = {2024-11-30},
	journal = {IEEE Access},
	author = {Cao, Keyan and Liu, Yefan and Meng, Gongjie and Sun, Qimeng},
	year = {2020},
	pages = {85714--85728},
	file = {Cao et al. - 2020 - An Overview on Edge Computing Research.pdf:/Users/romankudravcev/Zotero/storage/8K3WZ2UZ/Cao et al. - 2020 - An Overview on Edge Computing Research.pdf:application/pdf},
}

@inproceedings{kaur_live_2023,
	address = {Hoboken, NJ, USA},
	title = {Live migration of containerized microservices between remote {Kubernetes} {Clusters}},
	copyright = {https://doi.org/10.15223/policy-029},
	isbn = {978-1-6654-9427-4},
	url = {https://ieeexplore.ieee.org/document/10225858/},
	doi = {10.1109/INFOCOMWKSHPS57453.2023.10225858},
	abstract = {The recent adoption of cloud native technologies by telecommunication industry is accompanied by the incoming development of Network Functions that are containerized and packaged as light-weighted microservices. In order to efficiently orchestrate Cloud-Native Network Functions (CNFs), thorough migration strategies should be supported to place and migrate the CNFs. In this paper, we present a testbed illustrating the migration of pods between remote K8S cluster. As a use case, we consider the migration of a network function belonging to an opensource 5G core network (namely, Magma).},
	language = {en},
	urldate = {2024-04-27},
	booktitle = {{IEEE} {INFOCOM} 2023 - {IEEE} {Conference} on {Computer} {Communications} {Workshops} ({INFOCOM} {WKSHPS})},
	publisher = {IEEE},
	author = {Kaur, Kiranpreet and Guillemin, Fabrice and Sailhan, Francoise},
	month = may,
	year = {2023},
	pages = {1--6},
	file = {Kaur et al. - 2023 - Live migration of containerized microservices betw.pdf:/Users/romankudravcev/Zotero/storage/DIPVT8B4/Kaur et al. - 2023 - Live migration of containerized microservices betw.pdf:application/pdf},
}

@article{aazam_offloading_2018,
	title = {Offloading in fog computing for {IoT}: {Review}, enabling technologies, and research opportunities},
	volume = {87},
	issn = {0167739X},
	shorttitle = {Offloading in fog computing for {IoT}},
	url = {https://linkinghub.elsevier.com/retrieve/pii/S0167739X18301973},
	doi = {10.1016/j.future.2018.04.057},
	abstract = {The digital world is expanding rapidly and advances in networking technologies such as 4G long-term evolution (LTE), wireless broadband (WiBro), low-power wide area networks (LPWAN), 5G, LiFi, and so on, all of which are paving the way for the emergence of sophisticated services. The number of online applications is increasing along with more computation, communication, and intelligent capabilities. Although current devices in use today are also getting more powerful in terms of features and capabilities, but they are still incapable of executing smart, autonomous, and intelligent tasks such as those often required for smart healthcare, ambient assisted living (AAL), virtual reality, augmented reality, intelligent vehicular communication, as well as in many services related to smart cities, Internet of Things (IoT), Tactile Internet, Internet of Vehicles (IoV), and so on. For many of these applications, we need another entity to execute tasks on behalf of the user’s device and return the results - a technique often called offloading, where tasks are outsourced and the involved entities work in tandem to achieve the ultimate goal of the application. Task offloading is attractive for emerging IoT and cloud computing applications. It can occur between IoT nodes, sensors, edge devices, or fog nodes. Offloading can be performed based on different factors that include computational requirements of an application, load balancing, energy management, latency management, and so on. We present a taxonomy of recent offloading schemes that have been proposed for domains such as fog, cloud computing, and IoT. We also discuss the middleware technologies that enable offloading in a cloud-IoT cases and the factors that are important for offloading in a particular scenario. We also present research opportunities concerning offloading in fog and edge computing.},
	language = {en},
	urldate = {2024-12-16},
	journal = {Future Generation Computer Systems},
	author = {Aazam, Mohammad and Zeadally, Sherali and Harras, Khaled A.},
	month = oct,
	year = {2018},
	pages = {278--289},
	file = {PDF:/Users/romankudravcev/Zotero/storage/GHH2Q8W9/Aazam et al. - 2018 - Offloading in fog computing for IoT Review, enabling technologies, and research opportunities.pdf:application/pdf},
}

@article{hong_resource_2020,
	title = {Resource {Management} in {Fog}/{Edge} {Computing}: {A} {Survey} on {Architectures}, {Infrastructure}, and {Algorithms}},
	volume = {52},
	issn = {0360-0300, 1557-7341},
	shorttitle = {Resource {Management} in {Fog}/{Edge} {Computing}},
	url = {https://dl.acm.org/doi/10.1145/3326066},
	doi = {10.1145/3326066},
	abstract = {Contrary to using distant and centralized cloud data center resources, employing decentralized resources at the edge of a network for processing data closer to user devices, such as smartphones and tablets, is an upcoming computing paradigm, referred to as fog/edge computing. Fog/edge resources are typically resource-constrained, heterogeneous, and dynamic compared to the cloud, thereby making resource management an important challenge that needs to be addressed. This article reviews publications as early as 1991, with 85\% of the publications between 2013 and 2018, to identify and classify the architectures, infrastructure, and underlying algorithms for managing resources in fog/edge computing.},
	language = {en},
	number = {5},
	urldate = {2025-01-04},
	journal = {ACM Computing Surveys},
	author = {Hong, Cheol-Ho and Varghese, Blesson},
	month = sep,
	year = {2020},
	pages = {1--37},
	file = {PDF:/Users/romankudravcev/Zotero/storage/UPPLDKEF/Hong and Varghese - 2020 - Resource Management in FogEdge Computing A Survey on Architectures, Infrastructure, and Algorithms.pdf:application/pdf},
}

@article{zheng_service_2024,
	title = {Service placement strategies in mobile edge computing based on an improved genetic algorithm},
	volume = {105},
	issn = {15741192},
	url = {https://linkinghub.elsevier.com/retrieve/pii/S1574119224001111},
	doi = {10.1016/j.pmcj.2024.101986},
	abstract = {In mobile edge computing (MEC), quality of service (QoS) is closely related to optimizing service placement strategies, which is crucial to providing efficient services that meet user needs. However, due to the mobility of users and the energy consumption limit of edge servers, the existing policies make it difficult to ensure the QoS level of users. In this paper, a novel genetic algorithm based on a simulated annealing algorithm is proposed to balance the QoS of users and the energy consumption of edge servers. Finally, the effectiveness of the algorithm is verified by experiments. The results show that the QoS value obtained by the proposed algorithm is closer to the maximum value, which has significant advantages in improving QoS value and resource utilization. In addition, in software development related to mobile edge computing, our algorithm helps improve the program’s running speed.},
	language = {en},
	urldate = {2025-01-05},
	journal = {Pervasive and Mobile Computing},
	author = {Zheng, Ruijuan and Xu, Junwei and Wang, Xueqi and Liu, Muhua and Zhu, Junlong},
	month = dec,
	year = {2024},
	pages = {101986},
	file = {PDF:/Users/romankudravcev/Zotero/storage/VP375EIN/Zheng et al. - 2024 - Service placement strategies in mobile edge computing based on an improved genetic algorithm.pdf:application/pdf},
}

@article{bohm_cloud-edge_2022,
	title = {Cloud-{Edge} {Orchestration} for {Smart} {Cities}: {A} {Review} of {Kubernetes}-based {Orchestration} {Architectures}},
	volume = {6},
	copyright = {https://creativecommons.org/licenses/by/3.0/},
	issn = {2518-3893},
	shorttitle = {Cloud-{Edge} {Orchestration} for {Smart} {Cities}},
	url = {https://publications.eai.eu/index.php/sc/article/view/1197},
	doi = {10.4108/eetsc.v6i18.1197},
	abstract = {Edge computing offers computational resources near data-generating devices to enable low-latency access. Especially for smart city contexts, edge computing becomes inevitable for providing real-time services, like air quality monitoring systems. Kubernetes, a popular container orchestration platform, is often used to efficiently manage containerized applications in smart cities. Although it misses essential requirements of edge computing, like network-related metrics for scheduling decisions, it is still considered. This paper analyzes custom cloud-edge architectures implemented with Kubernetes. Specifically, we analyze how essential requirements of edge orchestration in smart cities are solved. Also, shortcomings are identified in these architectures based on the fundamental requirements of edge orchestration. We conduct a literature review to obtain the general requirements of edge computing and edge orchestration for our analysis. We map these requirements to the capabilities of Kubernetes-based cloud-edge architectures to assess their level of achievement. Issues like using network-related metrics and the missing topology-awareness of networks are partially solved. However, requirements like real-time resource utilization, fault-tolerance, and the placement of container registries are in the early stages. We conclude that Kubernetes is an eligible candidate for cloudedge orchestration. When the formerly mentioned issues are solved, Kubernetes can successfully contribute latency-critical, large-scale, and multi-tenant application deployments for smart cities.},
	language = {en},
	number = {18},
	urldate = {2025-01-05},
	journal = {EAI Endorsed Transactions on Smart Cities},
	author = {Böhm, Sebastian and Wirtz, Guido},
	month = may,
	year = {2022},
	pages = {e2},
	file = {PDF:/Users/romankudravcev/Zotero/storage/UAKE5D3W/Böhm and Wirtz - 2022 - Cloud-Edge Orchestration for Smart Cities A Review of Kubernetes-based Orchestration Architectures.pdf:application/pdf},
}

@article{salaht_overview_2021,
	title = {An {Overview} of {Service} {Placement} {Problem} in {Fog} and {Edge} {Computing}},
	volume = {53},
	issn = {0360-0300, 1557-7341},
	url = {https://dl.acm.org/doi/10.1145/3391196},
	doi = {10.1145/3391196},
	abstract = {To support the large and various applications generated by the Internet of Things (IoT), Fog Computing was introduced to complement the Cloud Computing and offer Cloud-like services at the edge of the network with low latency and real-time responses. Large-scale, geographical distribution, and heterogeneity of edge computational nodes make service placement in such infrastructure a challenging issue. Diversity of user expectations and IoT devices characteristics also complicate the deployment problem. This article presents a survey of current research conducted on Service Placement Problem (SPP) in the Fog/Edge Computing. Based on a new classification scheme, a categorization of current proposals is given and identified issues and challenges are discussed.},
	language = {en},
	number = {3},
	urldate = {2025-01-05},
	journal = {ACM Computing Surveys},
	author = {Salaht, Farah Aït and Desprez, Frédéric and Lebre, Adrien},
	month = may,
	year = {2021},
	pages = {1--35},
	file = {PDF:/Users/romankudravcev/Zotero/storage/DYZ9W2SK/Salaht et al. - 2021 - An Overview of Service Placement Problem in Fog and Edge Computing.pdf:application/pdf},
}

@article{ma_efficient_2019,
	title = {Efficient {Live} {Migration} of {Edge} {Services} {Leveraging} {Container} {Layered} {Storage}},
	volume = {18},
	copyright = {https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/IEEE.html},
	issn = {1536-1233, 1558-0660, 2161-9875},
	url = {https://ieeexplore.ieee.org/document/8470949/},
	doi = {10.1109/TMC.2018.2871842},
	abstract = {Mobile users across edge networks require seamless migration of ofﬂoading services. Edge computing platforms must smoothly support these service transfers and keep pace with user movements around the network. However, live migration of ofﬂoading services in the wide area network poses signiﬁcant service handoff challenges in the edge computing environment. In this paper, we propose an edge computing platform architecture which supports seamless migration of ofﬂoading services while also keeping the moving mobile user “in service” with its nearest edge server. We identify a critical problem in the state-of-the-art tool for Docker container migration. Based on our systematic study of the Docker container storage system, we propose to leverage the layered nature of the storage system to reduce ﬁle system synchronization overhead, without dependence on the distributed ﬁle system. In contrast to the state-of-the-art service handoff method in the edge environment, our system yields a 80 percent (56 percent) reduction in handoff time under 5 Mbps (20 Mbps) network bandwidth conditions.},
	language = {en},
	number = {9},
	urldate = {2025-01-13},
	journal = {IEEE Transactions on Mobile Computing},
	author = {Ma, Lele and Yi, Shanhe and Carter, Nancy and Li, Qun},
	month = sep,
	year = {2019},
	pages = {2020--2033},
	file = {PDF:/Users/romankudravcev/Zotero/storage/WRTVTMFH/Ma et al. - 2019 - Efficient Live Migration of Edge Services Leveraging Container Layered Storage.pdf:application/pdf},
}

